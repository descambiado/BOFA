# BOFA Extended Systems v2.5.0 - Python Project Configuration

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bofa-extended-systems"
version = "2.5.0"
description = "Advanced Cybersecurity Operations Framework"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "descambiado", email = "david@descambiado.com"}
]
maintainers = [
    {name = "descambiado", email = "david@descambiado.com"}
]
keywords = [
    "cybersecurity",
    "penetration-testing",
    "red-team",
    "blue-team",
    "osint",
    "malware-analysis",
    "security-tools"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: System :: Networking :: Security"
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "cryptography>=41.0.7",
    "requests>=2.31.0",
    "python-nmap>=0.7.1",
    "scapy>=2.5.0",
    "beautifulsoup4>=4.12.2",
    "pyyaml>=6.0.1",
    "rich>=13.7.0",
    "click>=8.1.7",
    "sqlalchemy>=2.0.23",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0"
]
testing = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0"
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.7",
    "mkdocstrings[python]>=0.23.0"
]

[project.urls]
Homepage = "https://github.com/descambiado/BOFA"
Documentation = "https://docs.bofa.dev"
Repository = "https://github.com/descambiado/BOFA"
"Bug Reports" = "https://github.com/descambiado/BOFA/issues"
Changelog = "https://github.com/descambiado/BOFA/blob/main/CHANGELOG.md"

[project.scripts]
bofa-cli = "cli.bofa_cli:main"
bofa-server = "api.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["api*", "cli*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    ".venv",
    "venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_classes = [
    "Test*"
]
python_functions = [
    "test_*"
]

[tool.coverage.run]
source = ["api", "cli", "scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]